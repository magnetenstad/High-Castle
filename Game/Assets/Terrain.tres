[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[ext_resource path="res://Assets/grass.png" type="Texture" id=1]
[ext_resource path="res://Assets/sand.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_grass;
uniform sampler2D texture_sand;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform vec4 sand_color : hint_color = vec4(0.9, 0.9, 0.6, 1.0);
uniform vec4 grass_color : hint_color = vec4(0.5, 1.0, 0.5, 1.0);
uniform vec4 stone_color : hint_color = vec4(0.5, 0.5, 0.5, 1.0);

varying flat vec3 out_color;
varying float grass;

vec3 lerpColor(vec4 a, vec4 b, float t) {
	float rr = a.r + (b.r - a.r) * t;
	float gg = a.g + (b.g - a.g) * t;
	float bb = a.b + (b.b - a.b) * t;
	return vec3(rr, gg, bb);
}

void vertex() {
	UV=UV*uv1_scale.xy*128.0+uv1_offset.xy;
	
	grass = 0.0;
	
	if (VERTEX.y > 0.0) {
		out_color = lerpColor(sand_color, grass_color, clamp((VERTEX.y) / 3.0, 0.0, 1.0));
		grass = 1.0;
	} else if (VERTEX.y < -1.0) {
		out_color = lerpColor(sand_color, stone_color, clamp((-VERTEX.y) / 3.0, 0.0, 1.0));
	} else {
		out_color = vec3(sand_color.r, sand_color.g, sand_color.b);
	}
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex;
	
	if (grass == 0.0) {
		albedo_tex = texture(texture_sand, base_uv);
	} else {
		albedo_tex = texture(texture_grass, base_uv);
	}
	
	ALBEDO = out_color * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[resource]
shader = SubResource( 1 )
shader_param/albedo = Color( 0, 0, 0, 1 )
shader_param/specular = 0.1
shader_param/metallic = 0.1
shader_param/roughness = 0.8
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/sand_color = Color( 0.882353, 0.764706, 0.392157, 1 )
shader_param/grass_color = Color( 0.243137, 0.752941, 0.14902, 1 )
shader_param/stone_color = Color( 0.5, 0.5, 0.5, 1 )
shader_param/texture_grass = ExtResource( 1 )
shader_param/texture_sand = ExtResource( 2 )
